Tackling the second project in Code the Classics Vol. 1: Cavern, a Bubble Bobble clone.

I implemented a working Pygame Zero-like engine module that is compatible with these projects
for the first project (Pawng!/Boing!). Very likely will need extension or fixes as we implement
this one.

First step is to get the framework in place:
    * engine.py present
    * game script, named main.py (engine expects this name)
    * sounds/music/images dirs

Goal is to exactly duplicate the book text, only removing the pgz import, version check and run
lines, and adding in references to my own engine module:
    * import classes at the top
    * import just the run function at the bottom and call it

I have a very minimal version set up - it runs, just showing a blank white screen. Now to get the
game working.

I see two ways to approach this:
    * type it up from top to bottom
    * start with the hooks invoked by the engine (update & draw), and fill in stubs as necessary
        to keep it running without errors

The first seems pretty boring, won't see any results until the whole thing is typed up, and then
will have to debug it as a whole. I think I'll give the second approach a go.

Going smoothly so far. We start at the bottom with update() and draw(), and have been stubbing up
from there. I created some placeholder images, too. When it came time to wire up music, though, it
seemed easier to just bring in the real thing. So right now it sits on the menu screen with music
playing and no interactivity.

But now I am filling in the stub for space_pressed(), and I think they have a bug in the printed
code. As written, this logic always returns true, regardless of whether the key is pressed or not.
I verified my engine code is not sending out spurious key press events. So now, it is immediately
moving to a blank screen in State.PLAY (good part is it forces me to add a few more stubs, but 
still...).
